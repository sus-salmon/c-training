name: CI

on:
  push:
  pull_request:

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [clang, gcc]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install tools (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang gcc cppcheck valgrind
          sudo update-alternatives --set cc /usr/bin/${{ matrix.compiler }}

      - name: Install clang-format (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          # Устанавливаем точно ту же версию clang-format как на macOS (20.1.8)
          sudo apt-get install -y software-properties-common
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
          UBUNTU_CODENAME=$(lsb_release -sc)
          sudo add-apt-repository "deb http://apt.llvm.org/${UBUNTU_CODENAME}/ llvm-toolchain-${UBUNTU_CODENAME}-20 main"
          sudo apt-get update
          sudo apt-get install -y clang-format-20
          # Создаем symlink на конкретную версию
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-20 100

      - name: Install tools (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cppcheck
          # Устанавливаем clang-format через Homebrew (обычно последняя стабильная)
          brew install clang-format
          if [[ "${{ matrix.compiler }}" != "clang" ]]; then
            echo "Skipping gcc on macOS (use clang)"; exit 0
          fi

      - name: Verify tools installation
        run: |
          echo "=== Проверка установленных инструментов ==="
          ${{ matrix.compiler }} --version
          cppcheck --version
          clang-format --version

      - name: Check clang-format
        run: scripts/check-format.sh

      - name: cppcheck
        run: scripts/check-cppcheck.sh

      - name: Build all
        run: make build

      - name: Test all (sanitizers)
        run: make test

      - name: Valgrind (Ubuntu only)
        if: runner.os == 'Linux'
        run: make valgrind
